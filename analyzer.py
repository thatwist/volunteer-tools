from model import Post
from dataclasses import dataclass, replace, asdict
from abc import ABC, abstractmethod
import re

class Rule(ABC):
    @abstractmethod
    def analyze(self, post: Post) -> Post:
        pass
 
@dataclass
class RegexpRule(Rule):
    
    def __init__(self, regexps: dict[str, list[str]], update: dict[str, str]):
       self.regexps = regexps
       self.update = update

    def analyze(self, post: Post) -> Post:
        print(f"regexps {self.regexps}")
        post_dict = asdict(post)
        for k, v in self.regexps.items():
            for r in v:
                pattern = re.compile(r) # todo compile once
                if re.search(pattern, post_dict[k]):
                    print(f"match {pattern} in {post_dict[k]}")
                    return replace(post, **self.update)
        return post
 
rules = [
    # geo
    RegexpRule({ "message": ["–ö–∏—ó–≤"] }, { "geo": "–∫–∏—ó–≤" }),
    # infer category
    RegexpRule({ "message": ["–≥—É–º–∞–Ω—ñ—Ç–∞—Ä–Ω"] }, { "category": "gum" }),
    # infer post type
    RegexpRule({ "message": ["–®—É–∫–∞—é"] }, { "post_type": "need" }),
    # aux rules
    # hide ammunition
    RegexpRule({ "message": ["–±—Ä–æ–Ω—ñ–∫", "–±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç", ""] }, { "hidden": True }),
]


# simple test
from channels import telegram_channels_new

message1 = "#–ö–∏—ó–≤ #–£–∫—Ä–∞—ó–Ω–∞\
\
–®—É–∫–∞—é –≥—É–º–∞–Ω—ñ—Ç–∞—Ä–Ω—ñ —Å–∫–ª–∞–¥–∏ –ø–æ –£–∫—Ä–∞—ó–Ω—ñ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—å–∫–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤. \
\
–ó–∞–ø–∏—Ç–∏ –≤—ñ–¥:\
- –±–∞–≥–∞—Ç–æ–¥—ñ—Ç–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–≤\
- –ø–µ—Ä–µ—Å–µ–ª–µ–Ω—Ü—ñ –∑ –¥—ñ—Ç–∫–∞–º–∏ –¥–æ 2—Ö —Ä–æ–∫—ñ–≤! \
\
–©–æ —à—É–∫–∞—é—Ç—å: —Ç—ñ–ª—å–∫–∏ –¥—ñ—Ç–∫–∏ –¥–æ 2—Ö —Ä–æ–∫—ñ–≤!!! \
‚Äî–ü–∞–º–ø–µ—Ä—Å–∏ \
‚Äî–ü–ª—è—à–µ—á–∫–∏, —Å–æ—Å–∫–∏\
‚Äî–°—É–º—ñ—à\
‚Äî–ü—é—Ä–µ—à–∫–∏ —Ñ—Ä—É–∫—Ç–æ–≤—ñ \
‚Äî–ü—Ä–æ–¥—É–∫—Ç–∏ —Ç—Ä–∏–≤–∞–ª–æ–≥–æ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è (–í–µ—Ä–º—ñ—à–µ–ª—å–∫–∏, –∫–∞—à—ñ) \
‚Äî–º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∏\
‚Äî–∑–∞—Å–æ–±–∏ –≥—ñ–≥—ñ—î–Ω–∏\
‚Äî–æ–¥—è–≥ /–≤–∑—É—Ç—Ç—è \
\
–Ø–∫—â–æ —É –≤–∞—Å —î —ñ–Ω—Ñ–æ –∞–±–æ –≤–∏ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫ —Å–∫–ª–∞–¥—É, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—éüôè\
\
–ú–æ—ó –∫–æ–Ω—Ç–∞–∫—Ç–∏: –û–∫—Å–∞–Ω–∞, –≤–∞–π–±–µ—Ä 0985767819 \
–î–ª—è –∑–≤'—è–∑–∫—É 0934327366"

post1 = Post(
    title = message1[0:69],
    date = "2022-04-17 10:00:00",
    date_bucket = "1d",
    ts = 1111111111,
    category = None,
    channel = "vvolunteerskyiv",
    channel_id = "vvolunteerskyiv",
    channel_title = "vsdfsdf",
    platform = "tg",
    post_id = 1,
    views = 123,
    description = message1[0:200],
    message = message1,
    link = f"https://t.me/vvolunteerskyiv/123",
    author = "arthur")

posts = [post1]
for ch in telegram_channels_new:
    for post in posts:
        post.category = ch.category
        post.post_type = ch.post_type
        post.geo = ch.geo
        updated = post
        for rule in rules:
            updated = rule.analyze(updated)
        print(updated)
    
